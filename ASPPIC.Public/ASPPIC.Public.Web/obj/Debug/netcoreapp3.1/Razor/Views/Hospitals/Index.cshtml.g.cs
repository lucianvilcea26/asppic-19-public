#pragma checksum "D:\Projects\ASPPIC-19\asppic-19-public\ASPPIC.Public\ASPPIC.Public.Web\Views\Hospitals\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ded4989613a1b2e592ea1763facfb9a21747b89e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Hospitals_Index), @"mvc.1.0.view", @"/Views/Hospitals/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Projects\ASPPIC-19\asppic-19-public\ASPPIC.Public\ASPPIC.Public.Web\Views\_ViewImports.cshtml"
using ASPPIC.Public.Web;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ded4989613a1b2e592ea1763facfb9a21747b89e", @"/Views/Hospitals/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"662dd196fe0bb5c2fc81a300ec7334fd917569b9", @"/Views/_ViewImports.cshtml")]
    public class Views_Hospitals_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/hospitals.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Projects\ASPPIC-19\asppic-19-public\ASPPIC.Public\ASPPIC.Public.Web\Views\Hospitals\Index.cshtml"
  
    ViewData["Title"] = "Home Page";
    var longitude = 44.43225;
    var latitude = 26.10626;


#line default
#line hidden
#nullable disable
            WriteLiteral(@"        <div class=""sidebar "">
            <ul class=""list-group"">
                <li class=""list-group-item"">    
                    <h5 class=""text-center text-muted""><span class=""fas fa-funnel""></span>FILTREAZĂ</h5>
                    <hr />
                    <ul class=""list-group"">
                        <li class=""list-group-item"">
                            <h6 class=""text-muted"">DUPĂ TIPUL DE UNITATE MEDICALĂ</h6>
                        </li>
                        <li class=""list-group-item"">
                            <input type=""checkbox"" checked/>
                            <img class=""legendMarker"" src='https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-yellow.png' />
                            Direcție de Sănătate Publică
                        </li>
                        <li class=""list-group-item"">
                            <input type=""checkbox"" checked/>
                            <img class=""legendMarker"" src='https://raw");
            WriteLiteral(@".githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-violet.png' />
                            Centru de Testare COVID
                        </li>
                        <li class=""list-group-item"">
                            <input type=""checkbox"" checked />
                            <img class=""legendMarker"" src='https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png' />
                            Unitate medicală suport COVID
                        </li>
                        <li class=""list-group-item"">
                            <input type=""checkbox"" checked/>
                            <img class=""legendMarker"" src='https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-gold.png' />
                            Maternitate pacienți pozitivi COVID
                        </li>
                        <li class=""list-group-item"">
                            <input type=""checkbox"" chec");
            WriteLiteral(@"ked/>
                            <img class=""legendMarker"" src='https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-orange.png' />
                            Unitate medicală dedicată COVID - faza 1
                        </li>
                        <li class=""list-group-item"">
                            <input type=""checkbox"" checked/>
                            <img class=""legendMarker"" src='https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png' />
                            Unitate medicală dedicată COVID - faza 2
                        </li>
                        <li class=""list-group-item"">
                            <input type=""checkbox"" checked />
                            <img class=""legendMarker"" src='https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png' />
                            Unitate medicală dedicată COVID
                        </li>
        ");
            WriteLiteral(@"                <li class=""list-group-item"">
                            <input type=""checkbox"" checked/>
                            <img class=""legendMarker"" src='https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-grey.png' />
                            Unitate medicală NON-COVID
                        </li>
                    </ul>

                </li>
            </ul>
        </div>
            <div class=""map-container"">
                <div id=""map""></div>
            </div>
");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <style>
        /*#page-content-wrapper {
            display: flex;
            flex-direction: column;
        }

        .container-fluid {
            flex-grow: 1;
            display: flex;
        }
            */
        .legendMarker {
            margin: 4px 15px 4px 5px;
            width: 15px;
        }
        .sidebar {
            z-index: 5000;
            position: absolute;
            top: 87px;
            right: 30px;

        }
        .map-container {
            float: left;
            display: flex;
            flex-grow: 1;
            position: relative;
            display: -ms-flexbox;
            width: 100%;
        }

        #map {
            width: 100%;
            height: 1200px;
            position: absolute;
            left: 0px;
            top: 0px;
            outline: none;
        }

    </style>
    <link rel=""stylesheet"" href=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"" />
    <script src=""https://unpkg.com");
                WriteLiteral("/leaflet@1.6.0/dist/leaflet.js\"></script>\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ded4989613a1b2e592ea1763facfb9a21747b89e8586", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>
        $(document).ready(function () {
            var map = L.map('map', {
                'center': [45.7, 26.10626],
                'zoom': 7
            });

            function getMarker(categorie) {
                var color;
                switch (categorie) {
                    case 'DSP':
                        color= 'yellow';
                        break;
                    case ""TESTARE_COVID"":
                        color = 'violet';
                        break;
                    case ""SUPORT_COVID"":
                        color = 'blue';
                        break;
                    case ""SUPORT_COVID_MATERNITATE_POZITIVI"":
                        color = 'gold';
                        break;
                    case ""SPITAL_FAZA_1"":
                        color = 'orange';
                        break;
                    case ""SPITAL_FAZA_2"":
                        color = 'red';
                        break;
                    case ""DEDICAT");
                WriteLiteral(@"_COVID"":
                        color = 'green';
                        break;
                    case ""NON-COVID"":
                        color = 'grey';
                        break;

                }
                var icon = new L.Icon({
                    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-' + color + '.png',
                    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
                    iconSize: [25, 41],
                    iconAnchor: [12, 41],
                    popupAnchor: [1, -34],
                    shadowSize: [41, 41]
                });

                return icon;
            }

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 19,
                attribution: '&copy; ASPPIC-19'
            }).addTo(map);

            hospitals.forEach((hospital) => {
                var lat = parseFloat(h");
                WriteLiteral(@"ospital.latitudine);
                var lon = parseFloat(hospital.longitudine);
                console.log(lon, lat);
                L.marker([lat, lon], { icon: getMarker(hospital.categorie) }).addTo(map).on('click', function (e) {                    
                    $(""#hospitalModalTitle"").empty().text(hospital.unitateMedicala);
                    $(""#hospitalImage"").attr('src', hospital.imagine);
                    $(""#hospitalAddress"").text(hospital.adresa);
                    $(""#hospitalEmail"").text(hospital.email);
                    $(""#hospitalPhone"").text(hospital.telefon);
                    $(""#hospitalWebsite"").attr('href', hospital.website);
                    $(""#hospitalWebsite"").text(hospital.website);
                    $(""#stateHospital"").text(hospital.spitalDeStat)
                    $(""#hospitalRoute"").attr('href', ""http://maps.google.com/maps?daddr="" + hospital.latitudine + ""%2C"" + hospital.longitudine);
                    $(""#hospitalModal"").modal('show'); ");
                WriteLiteral("\r\n                });\r\n            })\r\n\r\n            $(\'#hospitalModal\').on(\'hide.bs.modal\', function () {\r\n                $(\"#hospitalImage\").attr(\'src\', \"\");\r\n            })\r\n        })\r\n    </script>\r\n");
            }
            );
            WriteLiteral(@"
<div class=""modal"" id=""hospitalModal"" tabindex=""-1"" role=""dialog"">
    <div class=""modal-dialog modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 id=""hospitalModalTitle"" class=""modal-title""></h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <div class=""row"">
                    <div class=""col-md-5"">
                        <img id=""hospitalImage""");
            BeginWriteAttribute("src", " src=\"", 8772, "\"", 8778, 0);
            EndWriteAttribute();
            WriteLiteral(@" class=""img-fluid img-thumbnail"" />
                    </div>
                    <div class=""col-md-7"">
                        <h5>Informații de contact</h5>
                        <p><b>Adresa: </b><span id=""hospitalAddress""></span></p>
                        <p><b>E-mail: </b><span id=""hospitalEmail""></span></p>
                        <p><b>Telefon: </b><span id=""hospitalPhone""></span></p>
                        <p><b>Website: </b><a id=""hospitalWebsite"">#</a></p>
                        <p><b>Spital de stat:</b> <span id=""stateHospital""></span></p>
                        <p><b>Indicații de orientare: </b><a id=""hospitalRoute"" target=""_blank"">Google Maps</a></p>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Închide</button>
            </div>
        </div>
    </div>
</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
