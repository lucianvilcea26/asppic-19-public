#pragma checksum "D:\Projects\ASPPIC-19\asppic-19-public\ASPPIC.Public\ASPPIC.Public.Web\Views\Map\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "506ce91e047f0a0c204d0530203870ccfe3b518c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Map_Index), @"mvc.1.0.view", @"/Views/Map/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Projects\ASPPIC-19\asppic-19-public\ASPPIC.Public\ASPPIC.Public.Web\Views\_ViewImports.cshtml"
using ASPPIC.Public.Web;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"506ce91e047f0a0c204d0530203870ccfe3b518c", @"/Views/Map/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"662dd196fe0bb5c2fc81a300ec7334fd917569b9", @"/Views/_ViewImports.cshtml")]
    public class Views_Map_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Projects\ASPPIC-19\asppic-19-public\ASPPIC.Public\ASPPIC.Public.Web\Views\Map\Index.cshtml"
  
    ViewData["Title"] = "Unități medicale";


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"map-container\">\r\n    <div id=\"map\"></div>\r\n</div>\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <style>

        html, body {
            display: -ms-flexbox !important;
            display: flex;
            min-height: 100vh;
            -ms-flex-direction: column;
            flex-direction: column;
        }

        body {
            margin: 0;
        }

        .fullscreen, main {
            display: -ms-flexbox !important;
            display: flex;
            -ms-flex-direction: column;
            flex-direction: column;
        }

        main {
            flex-grow: 1;
            padding: 0 !important;
        }

        .fullscreen {
            flex-grow: 1;
        }

        .map-container {
            display: -ms-flexbox !important;
            display: flex;
            -ms-flex-direction: column;
            flex-direction: column;
            flex-grow: 1;
            position: relative;
        }

        #map {
            position: absolute;
            left: 0;
            width: 100%;
            height: 100%;
        }
");
                WriteLiteral(@"
        footer {
            position: relative !important;
            bottom: auto !important;
        }
    </style>
    <link rel=""stylesheet"" href=""https://unpkg.com/leaflet@1.7.1/dist/leaflet.css""
          integrity=""sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==""");
                BeginWriteAttribute("crossorigin", "\r\n          crossorigin=\"", 1489, "\"", 1514, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n    <script src=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\"\r\n            integrity=\"sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==\"");
                BeginWriteAttribute("crossorigin", "\r\n            crossorigin=\"", 1706, "\"", 1733, 0);
                EndWriteAttribute();
                WriteLiteral("></script>\r\n\r\n    <!-- Load Esri Leaflet from CDN -->\r\n    <script src=\"https://unpkg.com/esri-leaflet@2.5.1/dist/esri-leaflet.js\"\r\n            integrity=\"sha512-q7X96AASUF0hol5Ih7AeZpRF6smJS55lcvy+GLWzJfZN+31/BQ8cgNx2FGF+IQSA4z2jHwB20vml+drmooqzzQ==\"");
                BeginWriteAttribute("crossorigin", "\r\n            crossorigin=\"", 1985, "\"", 2012, 0);
                EndWriteAttribute();
                WriteLiteral(@"></script>

    <script src=""https://cdnjs.cloudflare.com/ajax/libs/leaflet-ajax/2.1.0/leaflet.ajax.min.js""
            integrity=""sha512-Abr21JO2YqcJ03XGZRPuZSWKBhJpUAR6+2wH5zBeO4wAw4oksr8PRdF+BKIRsxvCdq+Mv4670rZ+dLnIyabbGw==""
            crossorigin=""anonymous""></script>
    <script>
        $(document).ready(function () {

            var map = L.map('map').setView([45.8, 25], 7);

            L.esri.basemapLayer('Streets').addTo(map);

            var spitale = L.esri.featureLayer({
                url: 'https://gissrv.asppic-19.geo-spatial.ro/judete-provider/rest/services/judete/FeatureServer/0'
                // url: 'https://gissrv.asppic-19.geo-spatial.ro/file-geojson/rest/services/spitale/FeatureServer/0'
            }).addTo(map);


            // var judete_medie_zi = new L.GeoJSON.AJAX(""../geojsonfiles/judete_va2.geojson"").addTo(map);
            // judete_medie_zi.bindPopup(function (layer) {
            //     return L.Util.template('<p>Nume judet <strong>{f2}</strong> nr de");
                WriteLiteral(@" cazuri {f1}</p>', layer.feature.properties);
            // });

            var spitale = L.esri.featureLayer({
                url: 'https://gissrv.asppic-19.geo-spatial.ro/spitale-provider/rest/services/spitale/FeatureServer/0'
                // url: 'https://gissrv.asppic-19.geo-spatial.ro/file-geojson/rest/services/spitale/FeatureServer/0'
            }).addTo(map);

            spitale.bindPopup(function (layer) {
                return L.Util.template('<p>Nume spital <strong>{f2}</strong> nr de cazuri {f1}</p>', layer.feature.properties);
            });
        })



    </script>

    <script>
        var map = L.map('map').setView([45.8, 25], 7);

        var bm_streets = L.esri.basemapLayer('Streets');
        bm_streets.addTo(map);
        var bm_gray = L.esri.basemapLayer('Gray');
        bm_gray.addTo(map);
        var bm_topographic = L.esri.basemapLayer('Topographic');
        bm_topographic.addTo(map);

        function getColor(d) {
            console.log(""d"", ");
                WriteLiteral(@"d);
            if (d > 150) return '#800026';
            
            if (d > 150) return '#800026';
            if (d > 125) return '#BD0026';
            if (d > 100) return '#E31A1C';
            if (d > 75) return '#FC4E2A';
            if (d > 50) return '#FD8D3C';
            if (d > 25) return '#FEB24C';
            if (d > 10) return '#FED976';
            return'#FFEDA0';
        }
        function asppic19(feature) {
            console.log()
            return {
                fillColor: getColor(feature.properties.lst_day),
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7
            };
        };
        var counties_stats = new L.GeoJSON.AJAX(""../geojsonfiles/judete_stats.geojson"", {
            style: asppic19
        });
        counties_stats.addTo(map);

        counties_stats.bindPopup(function (layer) {
            return L.Util.template('<p>Nume judet <str");
                WriteLiteral(@"ong>{county}</strong> <br />Nr de cazuri:<br /> <li>Ultima zi: {last_day}</li><li>Ultimele 7 zile: {last_week}</li><li>Ultimele 30 zile: {last_month}</li>', layer.feature.properties);
        });

        var hospitals = L.esri.featureLayer({
            url: 'https://gissrv.asppic-19.geo-spatial.ro/file-geojson/rest/services/spitale/FeatureServer/0'
        }).addTo(map);

        hospitals.bindPopup(function (layer) {
            return L.Util.template('<p>Nume spital <strong>{f2}</strong> nr de cazuri {f1}</p>', layer.feature.properties);
        });

        var legend = L.control({ position: 'bottomright' });

        legend.onAdd = function (map) {

            var div = L.DomUtil.create('div', 'info legend'),
                grades = [10, 25, 50, 75, 100, 125, 150],
                labels = [];

            // loop through our density intervals and generate a label with a colored square for each interval
            for (var i = 0; i < grades.length; i++) {
                div.inne");
                WriteLiteral(@"rHTML +=
                    '<i style=""background:' + getColor(grades[i] + 1) + '""></i> ' +
                    grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');
            }

            return div;
        };

        legend.addTo(map);

        var baseMaps = {
            ""Strazi"": bm_streets,
            ""Tonuri de gri"": bm_gray,
            ""Topografic"": bm_topographic
        };

        var overlayMaps = {
            ""Judete (nr cazuri)"": counties_stats,
            ""Spitale"": hospitals
        };
        L.control.layers(baseMaps, overlayMaps).addTo(map);


        map.attributionControl.addAttribution('Set de date &copy; <a href="""">De adaugat</a>');

    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
